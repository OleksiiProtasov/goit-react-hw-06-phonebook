{"version":3,"sources":["Components/Phonebook/style.module.css","Components/Container/style.module.css","Components/filter/style.module.css","Redux/actionsR.js","Redux/reducerR.js","Redux/StoreR.js","Components/Container/continer.js","Components/form/form.js","Components/filter/filter.js","Components/Phonebook/ContactList.js","App.js","index.js","Components/form/style.module.css"],"names":["module","exports","addContact","createAction","data","payload","id","shortid","generate","deleteContact","filterContact","itemContactReducer","createReducer","state","action","search","find","el","name","toLowerCase","alert","filtered","filter","filterContactReducer","combineReducers","items","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistore","persistor","persistStore","Container","children","className","style","Form","dispatch","useDispatch","useState","setName","number","setNumber","handleChange","e","currentTarget","value","styles","TaskEditor","onSubmit","preventDefault","length","TaskEditor_label","TaskEditor_input","type","onChange","TaskEditor_button","Filter","input","target","ContactList","useSelector","contact","includes","TaskList","map","TaskList_item","TaskList_button","onClick","onRemoveContact","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.5c1e1e0c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"style_TaskList__3QPU0\",\"TaskList_item\":\"style_TaskList_item__xx3te\",\"completed\":\"style_completed__zlTmO\",\"TaskList_text\":\"style_TaskList_text__e09T-\",\"TaskList_actions\":\"style_TaskList_actions__2FDps\",\"TaskList_button\":\"style_TaskList_button__13EE3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"style_Container__2_ZZi\",\"button\":\"style_button__2gQuN\",\"active\":\"style_active__3EPdg\",\"disabled\":\"style_disabled__2dYB_\",\"title\":\"style_title__1OrPQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"style_input__3j2Aw\"};","import shortid from \"shortid\";\nimport { createAction } from \"@reduxjs/toolkit\";\n// import types from './typesR';\n\nexport const addContact = createAction(\"contacts/add\", (data) => ({\n  payload: {\n    ...data,\n    id: shortid.generate(),\n  },\n}));\n\nexport const deleteContact = createAction(\"contacts/delete\");\n\nexport const filterContact = createAction(\"contacts/changeFilter\");\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n// import types from './typesR';\n\nimport { addContact, deleteContact, filterContact } from \"./actionsR\";\n\nconst itemContactReducer = createReducer([], {\n  [addContact]: (state, action) => {\n    const search = state.find(\n      (el) => el.name.toLowerCase() === action.payload.name.toLowerCase()\n    );\n    if (search) {\n      alert(`${search.name} is already in contacts.`);\n      return;\n    }\n    return [...state, action.payload];\n  },\n  [deleteContact]: (state, action) => {\n    const filtered = state.filter((el) => el.id !== action.payload);\n    return [...filtered];\n  },\n});\n\nconst filterContactReducer = createReducer(\"\", {\n  [filterContact]: (state, action) => action.payload,\n});\n\nexport default combineReducers({\n  items: itemContactReducer,\n  filter: filterContactReducer,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport storage from \"redux-persist/lib/storage\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n\nimport contactReducer from \"./reducerR\";\n\nconst contactsPersistConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactReducer),\n  },\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nconst persistore = { store, persistor };\n\nexport default persistore;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"../Container/style.module.css\";\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={style.Container}>{children}</div>\r\n);\r\n\r\nexport default Container;\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.arrayOf(PropTypes.element).isRequired,\r\n};\r\n","import styles from \"./style.module.css\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addContact } from \"../../Redux/actionsR\";\n\nexport default function Form() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (name.length === 0 || number.length === 0) {\n      alert(\"Fields must be filled!\");\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={styles.TaskEditor} onSubmit={handleSubmit}>\n      <label className={styles.TaskEditor_label}>\n        Name\n        <input\n          className={styles.TaskEditor_input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={styles.TaskEditor_label}>\n        Number\n        <input\n          className={styles.TaskEditor_input}\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button className={styles.TaskEditor_button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import style from \"./style.module.css\";\nimport {useDispatch} from 'react-redux';\nimport {filterContact} from '../../Redux/actionsR'\n\nconst Filter = () => {\n  const dispatch = useDispatch()\n\n  const onChangeFilter = e => dispatch(filterContact(e.target.value));\n\n  return(\n    <label>\n      Find contacts by name\n      <input\n        className={style.input}\n        type=\"text\"\n        name= \"filter\"\n        onChange={onChangeFilter}\n      />\n    </label>\n  )\n}\n\nexport default Filter\n","import { useSelector, useDispatch } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { deleteContact } from \"../../Redux/actionsR\";\nimport styles from \"./style.module.css\";\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const onRemoveContact = (id) => dispatch(deleteContact(id));\n\n  const getContactList = (state) => {\n    const { filter, items } = state.contacts;\n\n    return items.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const contacts = useSelector(getContactList);\n\n  return (\n    <ul className={styles.TaskList}>\n      {contacts.map(({ name, id, number }) => (\n        <li className={styles.TaskList_item} key={id}>\n          {name + \" : \" + number}\n          {\n            <button\n              className={styles.TaskList_button}\n              type=\"button\"\n              name=\"delete\"\n              onClick={() => onRemoveContact(id)}\n            >\n              delete\n            </button>\n          }\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;\n","import Container from \"./Components/Container\";\nimport Form from \"./Components/form\";\nimport Filter from \"./Components/filter\";\nimport ContactList from \"./Components/Phonebook\";\n\nexport default function App() {\n  return (\n    <>\n      <Container>\n        <h1>Phonebook</h1>\n        <Form />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </Container>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/StoreR\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor\":\"style_TaskEditor__17iUk\",\"TaskEditor_label\":\"style_TaskEditor_label__2l9gF\",\"TaskEditor_input\":\"style_TaskEditor_input__3rex1\",\"TaskEditorinput\":\"style_TaskEditorinput__2bkn1\",\"TaskEditor_button\":\"style_TaskEditor_button__23G8-\"};"],"sourceRoot":""}